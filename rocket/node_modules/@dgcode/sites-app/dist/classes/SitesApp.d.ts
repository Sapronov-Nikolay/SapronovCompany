import { Site } from './Site';
import { Page } from './Page';
import { PageType } from './PageType';
import { AttachmentType } from './AttachmentType';
/**
 * Create and access Google Sites.
 */
export declare class SitesApp {
    /**
     * @see https://developers.google.com/apps-script/reference/sites/attachment-type.html
     */
    AttachmentType: (keyof typeof AttachmentType);
    /**
     * @see https://developers.google.com/apps-script/reference/sites/page-type.html
     */
    PageType: (keyof typeof PageType);
    /**
     * Creates a new Site by copying an existing Site.
     *
     * @param {string} domain The G Suite hosted domain (e.g. example.com)
     * @param {string} name The webspace name found in the URL (e.g. mySite)
     * @param {string} title The title of the site
     * @param {string} summary The description of the site
     * @param {Site} site The Site to copy from. This can either be a site or a template. If the
     * parameter is an existing site then the entire contents of the site will be copied. If the
     * given Site is a template, then a new Site is created based on that template.
     * @returns {Site} The site that was copied. Note that the copy is asynchronous, and the copy
     * operation
     * @see https://developers.google.com/apps-script/reference/sites/site.html
     */
    copySite(domain: string, name: string, title: string, summary: string, site: Site): Site;
    /**
     * Creates a new Site.
     *
     * @param {string} domain The G Suite hosted domain (e.g. example.com)
     * @param {string} name the path name found in the URL (e.g. mySite)
     * @param {string} title The title of the site
     * @param {string} summary The description of the site
     * @returns {Site} The created site
     * @see https://developers.google.com/apps-script/reference/sites/site.html
     */
    createSite(domain: string, name: string, title: string, summary: string): Site;
    /**
     * Returns the active page, if the script is hosted in a container, or null otherwise.
     *
     * @returns {Page} the active container if it is a sites page
     * @see https://developers.google.com/apps-script/reference/sites/page.html
     */
    getActivePage(): Page;
    /**
     * Returns the active container, if the script is hosted in a container, or null otherwise.
     *
     * @returns {Site} the active container if it is a site
     * @see https://developers.google.com/apps-script/reference/sites/site.html
     */
    getActiveSite(): Site;
    /**
     * Retrieves first 200 Sites belonging to this domain.
     *
     * @param {string} domain The G Suite hosted domain (e.g. example.com)
     * @returns {Site[]} Site[] — an array of sites belonging to the domain
     * @see https://developers.google.com/apps-script/reference/sites/site.html
     */
    getAllSites(domain: string): Site[];
    /**
     * Retrieves all Sites belonging to this domain.
     *
     * @param {string} domain The G Suite hosted domain (e.g. example.com)
     * @param {number} start the index of the first site to return
     * @param {number} max the maximum number of results to return
     * @returns {Site[]} Site[] — an array of sites belonging to the domain
     * @see https://developers.google.com/apps-script/reference/sites/site.html
     */
    getAllSites(domain: string, start: number, max: number): Site[];
    /**
     * Retrieves a Page by url.
     *
     * @param {string} url the public url
     * @returns {Page} a Page instance corresponding to the page at the URL or null if the page does
     * @see https://developers.google.com/apps-script/reference/sites/page.html
     */
    getPageByUrl(url: string): Page;
    /**
     * Retrieves a Site for the given Google Site, if the user is a consumer who does not have a
     * hosted domain.
     *
     * @param {string} name The webspace name found in the URL (e.g. mySite)
     * @returns {Site} A Site instance corresponding to a consumer site
     * @see https://developers.google.com/apps-script/reference/sites/site.html
     */
    getSite(name: string): Site;
    /**
     * Retrieves a Site for the given Google Site.
     *
     * @param {string} domain The G Suite hosted domain (e.g. example.com)
     * @param {string} name The webspace name found in the URL (e.g. mySite)
     * @returns {Site} A Site instance corresponding to a hosted domain
     * @see https://developers.google.com/apps-script/reference/sites/site.html
     */
    getSite(domain: string, name: string): Site;
    /**
     * Retrieves a Site by url.
     *
     * @param {string} url the public url
     * @returns {Site} a Site found at the given URL
     * @see https://developers.google.com/apps-script/reference/sites/site.html
     */
    getSiteByUrl(url: string): Site;
    /**
     * Retrieves first page of Sites for a user, if the user is a consumer who does not have a hosted
     * domain.
     *
     * @returns {Site[]} Site[] — An array of sites beloning to the user running the script
     * @see https://developers.google.com/apps-script/reference/sites/site.html
     */
    getSites(): Site[];
    /**
     * Retrieves Sites for a user between the given bounds if the user is a consumer who does not
     * have a hosted domain.
     *
     * @param {number} start the index of the first site to return
     * @param {number} max the maximum number of results to return
     * @returns {Site[]} Site[] — an array of all the sites owned for a user
     * @see https://developers.google.com/apps-script/reference/sites/site.html
     */
    getSites(start: number, max: number): Site[];
    /**
     * Retrieves first page of Sites belonging to this user in this domain.
     *
     * @param {string} domain The G Suite hosted domain (e.g. example.com)
     * @returns {Site[]} Site[] — An array of sites beloning to the user running the script
     * @see https://developers.google.com/apps-script/reference/sites/site.html
     */
    getSites(domain: string): Site[];
    /**
     * Retrieves all Sites belonging to this user in this domain for the given range given.
     *
     * @param {string} domain The G Suite hosted domain (e.g. example.com)
     * @param {number} start the index of the first site to return
     * @param {number} max the maximum number of results to return
     * @returns {Site[]} Site[] — an array of sites belonging to the user
     * @see https://developers.google.com/apps-script/reference/sites/site.html
     */
    getSites(domain: string, start: number, max: number): Site[];
}
