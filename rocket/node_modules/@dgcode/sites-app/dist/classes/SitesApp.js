"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// Exports -----------------------------------
/**
 * Create and access Google Sites.
 */
class SitesApp {
    /**
     * Creates a new Site by copying an existing Site.
     *
     * @param {string} domain The G Suite hosted domain (e.g. example.com)
     * @param {string} name The webspace name found in the URL (e.g. mySite)
     * @param {string} title The title of the site
     * @param {string} summary The description of the site
     * @param {Site} site The Site to copy from. This can either be a site or a template. If the
     * parameter is an existing site then the entire contents of the site will be copied. If the
     * given Site is a template, then a new Site is created based on that template.
     * @returns {Site} The site that was copied. Note that the copy is asynchronous, and the copy
     * operation
     * @see https://developers.google.com/apps-script/reference/sites/site.html
     */
    copySite(domain, name, title, summary, site) {
        const finalSite = null;
        return finalSite;
    }
    /**
     * Creates a new Site.
     *
     * @param {string} domain The G Suite hosted domain (e.g. example.com)
     * @param {string} name the path name found in the URL (e.g. mySite)
     * @param {string} title The title of the site
     * @param {string} summary The description of the site
     * @returns {Site} The created site
     * @see https://developers.google.com/apps-script/reference/sites/site.html
     */
    createSite(domain, name, title, summary) {
        const site = null;
        return site;
    }
    /**
     * Returns the active page, if the script is hosted in a container, or null otherwise.
     *
     * @returns {Page} the active container if it is a sites page
     * @see https://developers.google.com/apps-script/reference/sites/page.html
     */
    getActivePage() {
        const page = null;
        return page;
    }
    /**
     * Returns the active container, if the script is hosted in a container, or null otherwise.
     *
     * @returns {Site} the active container if it is a site
     * @see https://developers.google.com/apps-script/reference/sites/site.html
     */
    getActiveSite() {
        const site = null;
        return site;
    }
    // getAllSites(...) implementation
    getAllSites(...args) {
        const res = null;
        return res;
    }
    /**
     * Retrieves a Page by url.
     *
     * @param {string} url the public url
     * @returns {Page} a Page instance corresponding to the page at the URL or null if the page does
     * @see https://developers.google.com/apps-script/reference/sites/page.html
     */
    getPageByUrl(url) {
        const page = null;
        return page;
    }
    // getSite(...) implementation
    getSite(...args) {
        const res = null;
        return res;
    }
    /**
     * Retrieves a Site by url.
     *
     * @param {string} url the public url
     * @returns {Site} a Site found at the given URL
     * @see https://developers.google.com/apps-script/reference/sites/site.html
     */
    getSiteByUrl(url) {
        const site = null;
        return site;
    }
    // getSites(...) implementation
    getSites(...args) {
        const res = null;
        return res;
    }
}
exports.SitesApp = SitesApp;
//# sourceMappingURL=SitesApp.js.map